{"version":3,"sources":["case-data.js","how-this-works.tsx","state-picker.tsx","helpers.ts","state.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["caseData","postalCode","stateName","testsNeeded","HowThisWorks","isOpen","setIsOpen","onClose","href","StatePicker","selected","history","useHistory","StateSelect","placeholder","overrides","Root","style","width","minWidth","clearable","searchable","options","value","onChange","option","push","labelKey","valueKey","display","alignItems","justifyContent","Block","$theme","mediaQuery","large","fontSize","sizing","scale1200","medium","scale800","DATE_THRESHOLD","Date","now","sum","accumulator","currentValue","State","data","useStyletron","css","useParams","useState","statesData","setStatesData","filteredData","filter","stateData","dateString","date","toString","formattedDateString","substring","state","filterData","averageDailyTests","Math","round","map","index","length","totalTestResults","reduce","positiveTestRate","latestData","positive","total","positiveTests","selectedValue","caseDatum","useEffect","fetch","then","res","json","className","flexDirection","height","paddingBottom","paddingTop","toFixed","onClick","cursor","App","aria-label","viewBox","fill","color","position","top","border","right","aria-hidden","d","transformOrigin","dangerouslySetInnerHTML","__html","exact","path","Boolean","window","location","hostname","match","engine","Styletron","ReactDOM","render","StrictMode","theme","DarkTheme","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.906ae7c7.chunk.js","sourcesContent":["export const caseData = [\n  {\n    postalCode: \"AL\",\n    stateName: \"Alabama\",\n    testsNeeded: 8817,\n  },\n  {\n    postalCode: \"AK\",\n    stateName: \"Alaska\",\n    testsNeeded: 85,\n  },\n  {\n    postalCode: \"AZ\",\n    stateName: \"Arizona\",\n    testsNeeded: 10743,\n  },\n  {\n    postalCode: \"AR\",\n    stateName: \"Arkansas\",\n    testsNeeded: 2825,\n  },\n  {\n    postalCode: \"CA\",\n    stateName: \"California\",\n    testsNeeded: 42524,\n  },\n  {\n    postalCode: \"CO\",\n    stateName: \"Colorado\",\n    testsNeeded: 22942,\n  },\n  {\n    postalCode: \"CT\",\n    stateName: \"Conneticut\",\n\n    testsNeeded: 29288,\n  },\n  {\n    postalCode: \"DE\",\n    stateName: \"Delaware\",\n    testsNeeded: 5887,\n  },\n  {\n    postalCode: \"DC\",\n    stateName: \"District of Colombia\",\n    testsNeeded: 5857,\n  },\n  {\n    postalCode: \"FL\",\n    stateName: \"Florida\",\n    testsNeeded: 23937,\n  },\n  {\n    postalCode: \"GA\",\n    stateName: \"Georgia\",\n    testsNeeded: 25979,\n  },\n  {\n    postalCode: \"HI\",\n    stateName: \"Hawaii\",\n    testsNeeded: 164,\n  },\n  {\n    postalCode: \"ID\",\n    stateName: \"Idaho\",\n    testsNeeded: 1032,\n  },\n  {\n    postalCode: \"IL\",\n    stateName: \"Illinois\",\n    testsNeeded: 64167,\n  },\n  {\n    postalCode: \"IN\",\n    stateName: \"Indiana\",\n    testsNeeded: 28829,\n  },\n  {\n    postalCode: \"IA\",\n    stateName: \"Iowa\",\n    testsNeeded: 10266,\n  },\n  {\n    postalCode: \"KS\",\n    stateName: \"Kansas\",\n    testsNeeded: 2812,\n  },\n  {\n    postalCode: \"KY\",\n    stateName: \"Kentucky\",\n    testsNeeded: 4642,\n  },\n  {\n    postalCode: \"LA\",\n    stateName: \"Louisiana\",\n    testsNeeded: 21988,\n  },\n  {\n    postalCode: \"ME\",\n    stateName: \"Maine\",\n    testsNeeded: 1805,\n  },\n  {\n    postalCode: \"MD\",\n    stateName: \"Maryland\",\n    testsNeeded: 27925,\n  },\n  {\n    postalCode: \"MA\",\n    stateName: \"Massachusetts\",\n    testsNeeded: 71748,\n  },\n  {\n    postalCode: \"MI\",\n    stateName: \"Michigan\",\n    testsNeeded: 58081,\n  },\n  {\n    postalCode: \"MN\",\n    stateName: \"Minnesota\",\n    testsNeeded: 13853,\n  },\n  {\n    postalCode: \"MS\",\n    stateName: \"Mississippi\",\n    testsNeeded: 7770,\n  },\n  {\n    postalCode: \"MO\",\n    stateName: \"Missouri\",\n    testsNeeded: 9786,\n  },\n  {\n    postalCode: \"MT\",\n    stateName: \"Montana\",\n    testsNeeded: 124,\n  },\n  {\n    postalCode: \"NE\",\n    stateName: \"Nebraska\",\n    testsNeeded: 2698,\n  },\n  {\n    postalCode: \"NV\",\n    stateName: \"Nevada\",\n    testsNeeded: 5307,\n  },\n  {\n    postalCode: \"NH\",\n    stateName: \"New Hampshire\",\n    testsNeeded: 2632,\n  },\n  {\n    postalCode: \"NJ\",\n    stateName: \"New Jersey\",\n    testsNeeded: 98378,\n  },\n  {\n    postalCode: \"NM\",\n    stateName: \"New Mexico\",\n    testsNeeded: 5193,\n  },\n  {\n    postalCode: \"NY\",\n    stateName: \"New York\",\n    testsNeeded: 112802,\n  },\n  {\n    postalCode: \"NC\",\n    stateName: \"North Carolina\",\n    testsNeeded: 10289,\n  },\n  {\n    postalCode: \"ND\",\n    stateName: \"North Dakota\",\n    testsNeeded: 913,\n  },\n  {\n    postalCode: \"OH\",\n    stateName: \"Ohio\",\n    testsNeeded: 26103,\n  },\n  {\n    postalCode: \"OK\",\n    stateName: \"Oklahoma\",\n    testsNeeded: 5408,\n  },\n  {\n    postalCode: \"OR\",\n    stateName: \"Oregon\",\n    testsNeeded: 2139,\n  },\n  {\n    postalCode: \"PA\",\n    stateName: \"Pennsylvania\",\n    testsNeeded: 62532,\n  },\n  {\n    postalCode: \"RI\",\n    stateName: \"Rhode Island\",\n    testsNeeded: 6723,\n  },\n  {\n    postalCode: \"SC\",\n    stateName: \"South Carolina\",\n    testsNeeded: 8846,\n  },\n  {\n    postalCode: \"SD\",\n    stateName: \"South Dakota\",\n    testsNeeded: 927,\n  },\n  {\n    postalCode: \"TN\",\n    stateName: \"Tennessee\",\n    testsNeeded: 3266,\n  },\n  {\n    postalCode: \"TX\",\n    stateName: \"Texas\",\n    testsNeeded: 27282,\n  },\n  {\n    postalCode: \"UT\",\n    stateName: \"Utah\",\n    testsNeeded: 2022,\n  },\n  {\n    postalCode: \"VT\",\n    stateName: \"Vermont\",\n    testsNeeded: 897,\n  },\n  {\n    postalCode: \"VA\",\n    stateName: \"Virginia\",\n    testsNeeded: 16664,\n  },\n  {\n    postalCode: \"WA\",\n    stateName: \"Washington\",\n    testsNeeded: 6656,\n  },\n  {\n    postalCode: \"WV\",\n    stateName: \"West Virginia\",\n    testsNeeded: 1857,\n  },\n  {\n    postalCode: \"WI\",\n    stateName: \"Wisconsin\",\n    testsNeeded: 3974,\n  },\n  {\n    postalCode: \"WY\",\n    stateName: \"Wyoming\",\n    testsNeeded: 67,\n  },\n];\n","import React from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"baseui/modal\";\nimport { StyledLink } from \"baseui/link\";\nconst HowThisWorks = ({ isOpen, setIsOpen }: any) => {\n  return (\n    <Modal onClose={() => setIsOpen(false)} isOpen={isOpen}>\n      <ModalHeader>How this works</ModalHeader>\n      <ModalBody>\n        This webpage is based on{\" \"}\n        <StyledLink href=\"https://www.npr.org/sections/health-shots/2020/05/07/851610771/u-s-coronavirus-testing-still-falls-short-hows-your-state-doing\">\n          this\n        </StyledLink>{\" \"}\n        NPR article. Needed tests per day information is coming from{\" \"}\n        <StyledLink href=\"https://docs.google.com/spreadsheets/d/1KrhXO7aLH5v1hqJltbxSSIlrp4u2F_TqhQJu9w7z0ow/edit#gid=754849875\">\n          Harvard\n        </StyledLink>\n        , and the amount of tests being performed each day is coming from{\" \"}\n        <StyledLink href=\"https://covidtracking.com/\">this</StyledLink> API.{\" \"}\n        <StyledLink href=\"https://linkedin.com/in/adenta\">I</StyledLink> am not\n        a medical professional, just a citizen who believes we should focus on\n        how much testing is being done state-by-state, when talking about\n        reopening the country.\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default HowThisWorks;\n","import React from \"react\";\nimport { HeadingLarge, HeadingSmall } from \"baseui/typography\";\nimport { Select, Value } from \"baseui/select\";\nimport { caseData } from \"./case-data\";\nimport { useHistory } from \"react-router-dom\";\nimport { Block } from \"baseui/block\";\n\nconst StatePicker = ({ selected }: { selected: Value }) => {\n  const history = useHistory();\n\n  const StateSelect = () => {\n    return (\n      <Select\n        placeholder=\"State\"\n        overrides={{ Root: { style: { width: \"auto\", minWidth: \"125px\" } } }}\n        clearable={false}\n        searchable={false}\n        options={caseData}\n        value={selected}\n        onChange={({ option }) => {\n          if (!!option) {\n            history.push(`/${option.postalCode}`);\n          }\n        }}\n        labelKey=\"stateName\"\n        valueKey=\"postalCode\"\n      />\n    );\n  };\n\n  return (\n    <>\n      <HeadingLarge>\n        <Block\n          display={[\"none\", \"none\", \"flex\"]}\n          alignItems=\"flex-start\"\n          justifyContent=\"center\"\n          overrides={{\n            Block: {\n              style: ({ $theme }) => {\n                return {\n                  [$theme.mediaQuery.large]: {\n                    fontSize: $theme.sizing.scale1200,\n                  },\n                  [$theme.mediaQuery.medium]: {\n                    fontSize: $theme.sizing.scale800,\n                  },\n                };\n              },\n            },\n          }}\n        >\n          {/* Using html entities, becaue {\" \"} didn't work for some reason? */}\n          <span>Is</span>&nbsp;\n          <StateSelect />\n          &nbsp;\n          <span>doing enough COVID testing?</span>\n        </Block>\n      </HeadingLarge>\n      <Block display={[\"block\", \"block\", \"none\"]}>\n        <HeadingSmall>Is your state doing enough COVID testing?</HeadingSmall>\n        <StateSelect />\n      </Block>\n    </>\n  );\n};\n\nexport default StatePicker;\n","const DATE_THRESHOLD = new Date(Date.now() - 8 * 24 * 60 * 60 * 1000);\nconst sum = (accumulator: any, currentValue: any) => accumulator + currentValue;\n\nconst filterData = (statesData: any, postalCode: string) => {\n  return statesData.filter(\n    (stateData: { date: { toString: () => any }; state: string }) => {\n      const dateString = stateData.date.toString();\n      const formattedDateString = `${dateString.substring(\n        0,\n        4\n      )}/${dateString.substring(4, 6)}/${dateString.substring(6, 8)}`;\n      const date = new Date(formattedDateString);\n      return stateData.state === postalCode && date > DATE_THRESHOLD;\n    }\n  );\n};\n\nconst averageData = (data: { totalTestResults: any }[]) => {\n  return Math.round(\n    data\n      .map((stateData: { totalTestResults: any }, index: number) => {\n        if (index === data.length - 1) {\n          return 0;\n        }\n        return stateData.totalTestResults - data[index + 1].totalTestResults;\n      })\n      .reduce(sum, 0) / data.length\n  );\n};\n\nconst positiveTests = (data: any[]) => {\n  if(data.length === 0 ){\n    return 1;\n  }\n  const latestData = data[0];\n  const {positive, total} = latestData\n  return positive / total\n}\n\nexport { filterData, averageData, positiveTests};\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { caseData } from \"./case-data.js\";\nimport { Paragraph1 } from \"baseui/typography\";\n\nimport { StyledLink } from \"baseui/link\";\nimport { useStyletron } from \"styletron-react\";\nimport HowThisWorks from \"./how-this-works\";\nimport StatePicker from \"./state-picker\";\nimport { filterData, averageData, positiveTests } from \"./helpers\";\nimport { Value } from \"baseui/select\";\n\nconst State = () => {\n  const [css] = useStyletron();\n  const { postalCode } = useParams();\n\n  const [statesData, setStatesData] = useState<any>([]);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const filteredData = filterData(statesData, postalCode);\n  const averageDailyTests = averageData(filteredData);\n  const positiveTestRate = positiveTests(filteredData);\n\n  const selectedValue: Value = caseData.filter(\n    (caseDatum) => caseDatum.postalCode === postalCode\n  );\n\n  const selected = selectedValue[0];\n  useEffect(() => {\n    fetch(\"https://covidtracking.com/api/v1/states/daily.json\")\n      .then((res) => res.json())\n      .then((json) => setStatesData(json));\n  }, []);\n\n  return (\n    <>\n      <HowThisWorks {...{ isOpen, setIsOpen }} />\n      <StatePicker selected={selectedValue} />\n      <div\n        className={css({\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          height: \"100%\",\n        })}\n      >\n        <div\n          className={css({\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          })}\n        >\n          <Paragraph1>\n            <div\n              className={css({\n                fontSize: \"40vmin\",\n                height: \"100%\",\n                width: \"100%\",\n                paddingBottom: \"10vw\",\n                paddingTop: \"10vw\",\n              })}\n            >\n              {averageDailyTests > selected.testsNeeded ? \"YES\" : \"NO\"}\n            </div>\n          </Paragraph1>\n          <div\n            className={css({\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"flex-end\",\n            })}\n          >\n            <Paragraph1>\n              <StyledLink href=\"https://docs.google.com/spreadsheets/d/1KrhXO7aLH5v1hqJltbxSSIlrp4u2F_TqhQJu9w7z0ow/edit#gid=754849875\">\n                Daily tests needed: <b>{selected.testsNeeded}</b>\n              </StyledLink>\n            </Paragraph1>\n            <Paragraph1>\n              <StyledLink href=\"https://covidtracking.com/\">\n                Daily tests (avg): <b>{averageDailyTests}</b>\n              </StyledLink>\n            </Paragraph1>\n            <Paragraph1>\n              <StyledLink href=\"https://covidtracking.com/\">\n                Positive Tests: <b>{(positiveTestRate * 100).toFixed(0)}%</b>\n              </StyledLink>\n            </Paragraph1>\n          </div>\n        </div>\n        <Paragraph1>\n          <StyledLink>\n            <span\n              onClick={() => setIsOpen(true)}\n              className={css({ cursor: \"pointer\" })}\n            >\n              How this works.\n            </span>\n          </StyledLink>\n        </Paragraph1>\n      </div>\n    </>\n  );\n};\n\nexport default State;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Value } from \"baseui/select\";\nimport { Switch, Route } from \"react-router-dom\";\nimport State from \"./state\";\nimport { Block } from \"baseui/block\";\nimport StatePicker from \"./state-picker\";\n\nfunction App() {\n  const selected: Value = [];\n\n  return (\n    <div className=\"App\">\n      <a\n        href=\"https://github.com/adenta/isyourstatedoingenoughcovidtesting\"\n        className=\"github-corner\"\n        aria-label=\"View source on GitHub\"\n      >\n        <svg\n          width={80}\n          height={80}\n          viewBox=\"0 0 250 250\"\n          style={{\n            fill: \"#fff\",\n            color: \"#151513\",\n            position: \"absolute\",\n            top: 0,\n            border: 0,\n            right: 0,\n          }}\n          aria-hidden=\"true\"\n        >\n          <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n          <path\n            d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n            fill=\"currentColor\"\n            style={{ transformOrigin: \"130px 106px\" }}\n            className=\"octo-arm\"\n          />\n          <path\n            d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n            fill=\"currentColor\"\n            className=\"octo-body\"\n          />\n        </svg>\n      </a>\n      <style\n        dangerouslySetInnerHTML={{\n          __html:\n            \".github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}\",\n        }}\n      />\n      <Block height=\"100%\" width={[\"100%\", \"90%\", \"80%\"]}>\n        <Switch>\n          <Route exact path=\"/\">\n            <StatePicker selected={selected} />\n          </Route>\n          <Route path={`/:postalCode`}>\n            <State />\n          </Route>\n        </Switch>\n      </Block>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider as StyletronProvider } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { DarkTheme, BaseProvider } from \"baseui\";\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nconst engine = new Styletron();\n\nReactDOM.render(\n  <React.StrictMode>\n    <StyletronProvider value={engine}>\n      <BaseProvider theme={DarkTheme}>\n        <Router basename={process.env.PUBLIC_URL}>\n        <App /></Router>\n      </BaseProvider>\n    </StyletronProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}